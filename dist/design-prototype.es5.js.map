{"version":3,"sources":["design-prototype.js"],"names":[],"mappings":";;;;;;;;;;;;;IAOM,sBACF,6BAAY,0BAAZ,EAAwC;;;AACpC,SAAK,qBAAL,GAA6B,2BAA2B,YAA3B,CAAwC,IAAxC,CAA6C,0BAA7C,CAA7B,CADoC;AAEpC,SAAK,UAAL,GAAkB,2BAA2B,UAA3B,CAFkB;AAGpC,SAAK,WAAL,GAAmB,2BAA2B,WAA3B,CAAuC,IAAvC,CAA4C,0BAA5C,CAAnB,CAHoC;CAAxC;;AAMJ,oBAAoB,OAApB,GAA8B,CAAC,4BAAD,CAA9B;;IAEM;AACF,+BAAa;;;AACT,aAAK,QAAL,GAAgB,GAAhB,CADS;AAET,aAAK,UAAL,GAAkB,IAAlB,CAFS;AAGT,aAAK,YAAL,GAAoB,IAApB,CAHS;AAIT,aAAK,UAAL,GAAkB,qBAAlB,CAJS;AAKT,aAAK,QAAL,itFALS;KAAb;;;;6BAqCK,OAAO,IAAI,MAAM;AAClB,kBAAM,eAAN,GAAwB,YAAM;AAC1B,sBAAM,iBAAN,GAA0B,CAAC,MAAM,iBAAN,CADD;AAE1B,wBAAQ,OAAR,CAAgB,SAAS,gBAAT,CAA0B,8BAA1B,CAAhB,EACK,WADL,CACiB,qBADjB,EACwC,MAAM,iBAAN,CADxC,CAF0B;aAAN,CADN;AAMlB,kBAAM,gBAAN,GAAyB,YAAM;AAC3B,sBAAM,kBAAN,GAA2B,CAAC,MAAM,kBAAN,CADD;AAE3B,wBAAQ,OAAR,CAAgB,QAAhB,EAA0B,IAA1B,CAA+B,KAA/B,EAAsC,WAAtC,CAAkD,sBAAlD,EAA0E,MAAM,kBAAN,CAA1E,CAF2B;aAAN,CANP;;;;kCAWL;AACb,mBAAO,IAAI,eAAJ,EAAP,CADa;;;;;;;IAKf;AACF,+BAAY,0BAAZ,EAAuC;;;AACnC,aAAK,OAAL,GAAe,EAAf,CADmC;AAEnC,aAAK,0BAAL,GAAkC,0BAAlC,CAFmC;;AAInC,mCAA2B,YAA3B,CAAwC,KAAK,SAAL,EAAgB,KAAK,OAAL,CAAxD,CAJmC;;AAMnC,aAAK,UAAL,GAAkB,2BAA2B,UAA3B,CANiB;AAOnC,aAAK,WAAL,GAAmB,2BAA2B,WAA3B,CAPgB;KAAvC;;;;kCASU,QAAQ;AACd,iBAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,EADc;;;;qCAGL,YAAY;AACrB,iBAAK,0BAAL,CAAgC,YAAhC,CAA6C,UAA7C,EAAyD,KAAK,SAAL,CAAzD,CADqB;;;;uCAGV;AACX,mBAAO,KAAK,0BAAL,CAAgC,YAAhC,CAA6C,KAAK,SAAL,CAApD,CADW;;;;;;;AAInB,kBAAkB,OAAlB,GAA4B,CAAC,4BAAD,CAA5B;;IAGM;AACF,2BAAY,0BAAZ,EAAuC;;;AACnC,aAAK,0BAAL,GAAkC,0BAAlC,CADmC;AAEnC,aAAK,QAAL,GAAgB,GAAhB,CAFmC;AAGnC,aAAK,KAAL,GAAa,EAAb,CAHmC;AAInC,aAAK,gBAAL,GAAwB,EAAE,WAAW,GAAX,EAAgB,eAAc,GAAd,EAA1C,CAJmC;AAKnC,aAAK,OAAL,GAAe,kBAAf,CALmC;AAMnC,aAAK,UAAL,GAAkB,IAAlB,CANmC;AAOnC,aAAK,UAAL,GAAkB,mBAAlB,CAPmC;AAQnC,aAAK,YAAL,GAAoB,IAApB,CARmC;AASnC,aAAK,QAAL,yiDATmC;KAAvC;;;;6BA6BK,OAAO,IAAI,MAAM;AAClB,gBAAI,gBAAgB,KAAK,aAAL,CADF;AAElB,iBAAK,0BAAL,CAAgC,YAAhC,CAA6C,aAA7C,EAA4D,KAAK,SAAL,CAA5D,CAFkB;;;;gCAKP,4BAA2B;AACtC,mBAAO,IAAI,aAAJ,CAAkB,0BAAlB,CAAP,CADsC;;;;;;;AAI9C,cAAc,OAAd,GAAwB,CAAC,4BAAD,CAAxB;;IAEM;AACF,0BAAY,0BAAZ,EAAwC;;;AACpC,aAAK,0BAAL,GAAkC,0BAAlC,CADoC;AAEpC,aAAK,QAAL,GAAgB,GAAhB,CAFoC;AAGpC,aAAK,KAAL,GAAa,EAAE,YAAY,GAAZ,EAAiB,qBAAqB,GAArB,EAAhC,CAHoC;AAIpC,aAAK,OAAL,GAAe,gBAAf,CAJoC;AAKpC,aAAK,UAAL,GAAkB,IAAlB,CALoC;AAMpC,aAAK,QAAL,wGANoC;KAAxC;;;;6BAQK,OAAO,IAAI,MAAM,oBAAoB;AACtC,gBAAI,sBAAsB,MAAM,mBAAN,IAA6B,EAA7B,CADY;AAEtC,gBAAI,8BAA8B,KAAK,0BAAL,CAFI;;AAItC,+BAAmB,SAAnB,CAA6B;AACzB,4BAAY,MAAM,UAAN;AACZ,0BAAU,KAAV;AACA,8BAAc,oBAAoB,GAApB,CAAwB,UAAC,WAAD,EAAgB;AAClD,2BAAO,EAAE,WAAW,WAAX,EAAwB,UAAU,KAAV,EAAjC,CADkD;iBAAhB,CAAtC;aAHJ,EAJsC;AAWtC,kBAAM,gBAAN,GAAyB,4BAA4B,gBAA5B,CAXa;AAYtC,kBAAM,UAAN,GAAmB,4BAA4B,UAA5B,CAZmB;AAatC,kBAAM,GAAN,CAAU,kBAAV,EAA8B,YAAM;AAChC,sBAAM,MAAN,GAAe,4BAA4B,SAA5B,CAAsC,MAAM,UAAN,EAAkB,mBAAmB,SAAnB,CAAvE,CADgC;aAAN,CAA9B,CAbsC;;;;gCAkB3B,4BAA4B;AACvC,mBAAO,IAAI,YAAJ,CAAiB,0BAAjB,CAAP,CADuC;;;;;;;AAI/C,aAAa,OAAb,GAAuB,CAAC,4BAAD,CAAvB;;IAEM;AACF,wCAAY,UAAZ,EAAuB;;;AACnB,aAAK,UAAL,GAAkB,UAAlB,CADmB;AAEnB,aAAK,UAAL,GAAkB,EAAlB,CAFmB;KAAvB;;;;qCAIa,WAAW,SAAS;AAC7B,gBAAI,QAAQ,KAAK,UAAL,CAAgB,IAAhB,CAAsB,UAAC,SAAD;uBAAe,UAAU,SAAV,IAAuB,SAAvB;aAAf,CAA9B,CADyB;AAE7B,gBAAI,KAAJ,EAAW;AACP,sBAAM,OAAN,GAAgB,OAAhB,CADO;aAAX,MAEO;AACH,qBAAK,UAAL,CAAgB,IAAhB,CAAqB,EAAC,WAAW,SAAX,EAAsB,SAAS,OAAT,EAA5C,EADG;aAFP;;;;qCAMS,WAAW;AACpB,mBAAO,KAAK,UAAL,CAAgB,IAAhB,CAAsB,UAAC,SAAD;uBAAe,UAAU,SAAV,IAAuB,SAAvB;aAAf,CAA7B,CADoB;;;;qCAGX,YAAY,WAAW;AAChC,gBAAI,sBAAsB,KAAK,UAAL,CAAgB,IAAhB,CAAsB,UAAC,SAAD;uBAAe,UAAU,SAAV,IAAuB,SAAvB;aAAf,CAA5C,CAD4B;AAEhC,gBAAI,iBAAiB,oBAAoB,OAApB,CAA4B,IAA5B,CAAkC,UAAC,MAAD;uBAAY,OAAO,UAAP,IAAqB,UAArB;aAAZ,CAAnD,CAF4B;AAGhC,gCAAoB,OAApB,CAA4B,OAA5B,CAAqC,UAAC,MAAD;uBAAY,OAAO,QAAP,GAAkB,KAAlB;aAAZ,CAArC;;;AAHgC,gBAM5B,cAAJ,EAAoB;AAChB,+BAAe,QAAf,GAA0B,IAA1B,CADgB;aAApB,MAEO;AACH,oCAAoB,OAApB,CAA4B,CAA5B,EAA+B,QAA/B,GAA0C,IAA1C,CADG;aAFP;;AAMA,iBAAK,UAAL,CAAgB,UAAhB,CAA2B,kBAA3B,EAA+C,KAAK,UAAL,CAA/C,CAZgC;;;;kCAc1B,YAAY,WAAW;AAC7B,mBAAO,KAAK,UAAL,CACF,IADE,CACI,UAAC,SAAD;uBAAe,UAAU,SAAV,IAAuB,SAAvB;aAAf,CADJ,CAEF,OAFE,CAGF,IAHE,CAGI,UAAC,MAAD;uBAAY,OAAO,UAAP,IAAqB,UAArB;aAAZ,CAHX,CAD6B;;;;oCAOrB,YAAY,QAAQ;AAC5B,gBAAI,aAAa,WAAW,QAAX,CADW;;AAG5B,mBAAO,YAAP,CAAoB,OAApB,CAA4B,UAAC,WAAD;uBAAiB,YAAY,QAAZ,GAAuB,KAAvB;aAAjB,CAA5B,CAH4B;;AAK5B,gBAAI,CAAC,UAAD,EAAY;AACZ,2BAAW,QAAX,GAAsB,IAAtB,CADY;aAAhB;;;;yCAIa,cAAc;AAC3B,gBAAI,gBAAgB,aAAa,IAAb,CAAmB,UAAC,WAAD;uBAAiB,YAAY,QAAZ;aAAjB,CAAnC,CADuB;;AAG3B,gBAAI,aAAJ,EAAmB;AACf,uBAAO,cAAc,SAAd,CADQ;aAAnB;;;;;;;AAKR,2BAA2B,OAA3B,GAAqC,CAAC,YAAD,CAArC;;AAEA,QACK,MADL,CACY,kBADZ,EACgC,EADhC,EAES,SAFT,CAEmB,eAFnB,EAEoC,cAAc,OAAd,CAFpC,CAGS,SAHT,CAGmB,cAHnB,EAGmC,aAAa,OAAb,CAHnC,CAIS,SAJT,CAImB,iBAJnB,EAIsC,gBAAgB,OAAhB,CAJtC,CAKS,UALT,CAKoB,qBALpB,EAK2C,mBAL3C,EAMS,UANT,CAMoB,mBANpB,EAMyC,iBANzC,EAOS,OAPT,CAOiB,4BAPjB,EAO+C,0BAP/C","file":"design-prototype.es5.js","sourcesContent":["/**\n * design-prototype\n * Jason Vuong\n * jsonvuong@gmail.com\n * https://github.com/jsonvuong/design-prototype\n */\n\nclass DesignPrototypeCtrl {\n    constructor(DesignPrototypeDataService) {\n        this.selectPrototypeLayout = DesignPrototypeDataService.selectLayout.bind(DesignPrototypeDataService);\n        this.prototypes = DesignPrototypeDataService.prototypes;\n        this.selectStyle = DesignPrototypeDataService.selectStyle.bind(DesignPrototypeDataService);\n    }\n}\nDesignPrototypeCtrl.$inject = ['DesignPrototypeDataService'];\n\nclass designPrototype {\n    constructor(){\n        this.restrict = 'E';\n        this.transclude = true;\n        this.controllerAs = 'vm';\n        this.controller = 'DesignPrototypeCtrl';\n        this.template = `<div class=\"design-prototype-cp\">\n                            <span class=\"design-prototype-cp__menu-icon\"></span>\n                            <div class=\"design-prototype-cp__list-container\">\n                                <div class=\"design-prototype-cp__title-container\">\n                                    <h2 class=\"design-prototype-cp__title\">Prototype Control Panel</h2>\n                                </div>\n                                <div class=\"design-prototype-cp__options-container\">\n                                    <div class=\"design-prototype-cp__options\">\n                                        <button class=\"design-prototype__btn\" ng-click=\"toggleGrayscale()\" ng-class=\"{'is-selected':isGrayscaleActive}\">Grayscale</button>\n                                        <button class=\"design-prototype__btn\" ng-click=\"toggleGrayImages()\" ng-class=\"{'is-selected':isGrayImagesActive}\">Gray Images</button>\n                                    </div>\n                                    <div class=\"design-prototype-cp__groups\" ng-repeat=\"prototype in vm.prototypes\">\n                                        <span class=\"design-prototype-cp__list-title\">{{prototype.groupName}}</span>\n                                        <ul class=\"design-prototype-cp__layouts\">\n                                            <li class=\"design-prototype-cp__layouts-item\" ng-class=\"{\\'is-selected\\':layout.selected}\" ng-repeat=\"layout in prototype.layouts\" ng-click=\"vm.selectPrototypeLayout(layout.layoutName, prototype.groupName);\">\n                                                <span class=\"design-prototype__checkbox\" ng-class=\"{\\'is-selected\\':layout.selected}\" ></span> {{layout.layoutName}}\n                                                <ul ng-if=\"layout.styleClasses.length\" class=\"design-layouts__sublist\">\n                                                    <li ng-repeat=\"styleClass in layout.styleClasses\"\n                                                        class=\"design-layouts__sublist-item\"\n                                                        ng-class=\"{'is-selected':styleClass.selected}\"\n                                                        ng-click=\"vm.selectStyle(styleClass, layout)\"\n                                                        >{{styleClass.className}}\n                                                    </li>\n                                                </ul>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            </div><ng-transclude></ng-transclude>\n                            `;\n    }\n    link(scope, el, attr) {\n        scope.toggleGrayscale = () => {\n            scope.isGrayscaleActive = !scope.isGrayscaleActive;\n            angular.element(document.querySelectorAll(\"[prototype-toggle-grayscale]\"))\n                .toggleClass('prototype-grayscale', scope.isGrayscaleActive);\n        }\n        scope.toggleGrayImages = () => {\n            scope.isGrayImagesActive = !scope.isGrayImagesActive;\n            angular.element(document).find('img').toggleClass('prototype-gray-image', scope.isGrayImagesActive);\n        }\n    }\n    static factory() {\n        return new designPrototype();\n    }\n}\n\nclass DesignLayoutsCtrl{\n    constructor(DesignPrototypeDataService){\n        this.layouts = [];\n        this.DesignPrototypeDataService = DesignPrototypeDataService;\n\n        DesignPrototypeDataService.addPrototype(this.groupName, this.layouts);\n\n        this.prototypes = DesignPrototypeDataService.prototypes;\n        this.selectStyle = DesignPrototypeDataService.selectStyle;\n    }\n    addLayout(layout) {\n        this.layouts.push(layout);\n    }\n    selectLayout(layoutName) {\n        this.DesignPrototypeDataService.selectLayout(layoutName, this.groupName);\n    }\n    getPrototype() {\n        return this.DesignPrototypeDataService.getPrototype(this.groupName);\n    }\n}\nDesignLayoutsCtrl.$inject = ['DesignPrototypeDataService'];\n\n\nclass designLayouts {\n    constructor(DesignPrototypeDataService){\n        this.DesignPrototypeDataService = DesignPrototypeDataService;\n        this.restrict = 'E';\n        this.scope = {};\n        this.bindToController = { groupName: '@', defaultLayout:'@'};\n        this.require = '^designPrototype';\n        this.transclude = true;\n        this.controller = 'DesignLayoutsCtrl';\n        this.controllerAs = 'vm';\n        this.template = `<div class=\"design-layouts\">\n                            <div class=\"design-layouts__menu\">\n                                <span class=\"design-layouts__menu-icon\"></span>\n                                <ul class=\"design-layouts__list\">\n                                    <li class=\"design-layouts__list-title\">{{vm.getPrototype().groupName}}</li>\n                                    <li class=\"design-layouts__item\" ng-class=\"{\\'is-selected\\':layout.selected}\" ng-repeat=\"layout in vm.getPrototype().layouts\" ng-click=\"vm.selectLayout(layout.layoutName);\">\n                                        <span class=\"design-prototype__checkbox\" ng-class=\"{\\'is-selected\\':layout.selected}\" ></span>{{layout.layoutName}}\n                                        <ul ng-if=\"layout.styleClasses.length\" class=\"design-layouts__sublist\">\n                                            <li ng-repeat=\"styleClass in layout.styleClasses\"\n                                                class=\"design-layouts__sublist-item\"\n                                                ng-class=\"{'is-selected':styleClass.selected}\"\n                                                ng-click=\"vm.selectStyle(styleClass, layout)\"\n                                                >{{styleClass.className}}</li>\n                                        </ul>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"design-layouts_content\" ng-transclude></div>\n                        </div>`;\n    }\n    link(scope, el, attr) {\n        var defaultLayout = attr.defaultLayout;\n        this.DesignPrototypeDataService.selectLayout(defaultLayout, attr.groupName);\n    }\n\n    static factory(DesignPrototypeDataService){\n        return new designLayouts(DesignPrototypeDataService);\n    }\n}\ndesignLayouts.$inject = ['DesignPrototypeDataService'];\n\nclass designLayout {\n    constructor(DesignPrototypeDataService) {\n        this.DesignPrototypeDataService = DesignPrototypeDataService;\n        this.restrict = 'E';\n        this.scope = { layoutName: '@', layoutToggleClasses: '='};\n        this.require = '^designLayouts';\n        this.transclude = true;\n        this.template = `<div ng-class=\"getSelectedClass(layout.styleClasses)\" ng-if=\"layout.selected\" ng-transclude></div>`;\n    }\n    link(scope, el, attr, $DesignLayoutsCtrl) {\n        let layoutToggleClasses = scope.layoutToggleClasses || [];\n        let _DesignPrototypeDataService = this.DesignPrototypeDataService;\n\n        $DesignLayoutsCtrl.addLayout({\n            layoutName: scope.layoutName,\n            selected: false,\n            styleClasses: layoutToggleClasses.map((_styleClass)=> {\n                return { className: _styleClass, selected: false }\n            })\n        });\n        scope.getSelectedClass = _DesignPrototypeDataService.getSelectedClass;\n        scope.prototypes = _DesignPrototypeDataService.prototypes;\n        scope.$on('PROTOTYPE:CHANGE', () => {\n            scope.layout = _DesignPrototypeDataService.getLayout(scope.layoutName, $DesignLayoutsCtrl.groupName);\n        });\n    }\n\n    static factory(DesignPrototypeDataService) {\n        return new designLayout(DesignPrototypeDataService);\n    }\n}\ndesignLayout.$inject = ['DesignPrototypeDataService'];\n\nclass DesignPrototypeDataService {\n    constructor($rootScope){\n        this.$rootScope = $rootScope;\n        this.prototypes = [];\n    }\n    addPrototype(groupName, layouts) {\n        var group = this.prototypes.find( (prototype) => prototype.groupName == groupName );\n        if (group) {\n            group.layouts = layouts;\n        } else {\n            this.prototypes.push({groupName: groupName, layouts: layouts});\n        }\n    }\n    getPrototype(groupName) {\n        return this.prototypes.find( (prototype) => prototype.groupName == groupName );\n    }\n    selectLayout(layoutName, groupName) {\n        var selectedLayoutGroup = this.prototypes.find( (prototype) => prototype.groupName == groupName );\n        var selectedLayout = selectedLayoutGroup.layouts.find( (layout) => layout.layoutName == layoutName );\n        selectedLayoutGroup.layouts.forEach( (layout) => layout.selected = false );\n\n        // If no default layout is specificed, select the first\n        if (selectedLayout) {\n            selectedLayout.selected = true;\n        } else {\n            selectedLayoutGroup.layouts[0].selected = true;\n        }\n\n        this.$rootScope.$broadcast(\"PROTOTYPE:CHANGE\", this.prototypes);\n    }\n    getLayout(layoutName, groupName) {\n        return this.prototypes\n            .find( (prototype) => prototype.groupName == groupName)\n            .layouts\n            .find( (layout) => layout.layoutName == layoutName)\n            ;\n    }\n    selectStyle(styleClass, layout) {\n        var isSelected = styleClass.selected;\n\n        layout.styleClasses.forEach((_styleClass) => _styleClass.selected = false);\n\n        if (!isSelected){\n            styleClass.selected = true;\n        }\n    }\n    getSelectedClass(styleClasses) {\n        var selectedStyle = styleClasses.find( (_styleClass) => _styleClass.selected );\n\n        if (selectedStyle) {\n            return selectedStyle.className;\n        }\n    }\n}\nDesignPrototypeDataService.$inject = ['$rootScope'];\n\nangular\n    .module('design-prototype', [])\n        .directive('designLayouts', designLayouts.factory)\n        .directive('designLayout', designLayout.factory)\n        .directive('designPrototype', designPrototype.factory)\n        .controller('DesignPrototypeCtrl', DesignPrototypeCtrl)\n        .controller('DesignLayoutsCtrl', DesignLayoutsCtrl)\n        .service('DesignPrototypeDataService', DesignPrototypeDataService)\n    ;"]}